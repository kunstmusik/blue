/*
 * blue - object composition environment for csound
 * Copyright (C) 2012
 * Steven Yi <stevenyi@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package blue.ui.core.score.manager;

import blue.BlueSystem;
import blue.score.layers.LayerGroup;
import blue.ui.utilities.BlueCommonIcons;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author stevenyi
 */
public class LayerGroupManagerDialog extends javax.swing.JDialog {
    private final DefaultTableModel emptyList = new DefaultTableModel();
    
    private LayerGroup layerGroup;

    /**
     * Creates new form ScoreManagerDialog
     */
    public LayerGroupManagerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        TableColumn col = layersTable.getTableHeader().getColumnModel().getColumn(0);

        col.setMaxWidth(50);
        col.setMinWidth(50);
        col.setPreferredWidth(50);
        
        layersAddButton.setText("");
        layersAddButton.setIcon(BlueCommonIcons.ADD);
        layersMinusButton.setText("");
        layersMinusButton.setIcon(BlueCommonIcons.REMOVE);
        layersPushUpButton.setText("");
        layersPushUpButton.setIcon(BlueCommonIcons.PUSH_UP);
        layersPushDownButton.setText("");
        layersPushDownButton.setIcon(BlueCommonIcons.PUSH_DOWN);
    }
    
    public void setLayerGroup(LayerGroup layerGroup) {
        
        this.layerGroup = layerGroup;
        layersTable.setModel(new LayersTableModel(layerGroup));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        layersTable = new JTable() {
            public boolean getScrollableTracksViewportHeight() {
                return getPreferredSize().height < getParent().getHeight();
            }
        };
        jPanel2 = new javax.swing.JPanel();
        layersPushUpButton = new javax.swing.JButton();
        layersPushDownButton = new javax.swing.JButton();
        layersAddButton = new javax.swing.JButton();
        layersMinusButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(LayerGroupManagerDialog.class, "LayerGroupManagerDialog.title")); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(org.openide.util.NbBundle.getMessage(LayerGroupManagerDialog.class, "LayerGroupManagerDialog.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        layersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        layersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane4.setViewportView(layersTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        getContentPane().add(jScrollPane4, gridBagConstraints);

        jPanel2.setMinimumSize(new java.awt.Dimension(30, 20));
        jPanel2.setPreferredSize(new java.awt.Dimension(160, 20));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        layersPushUpButton.setText(org.openide.util.NbBundle.getMessage(LayerGroupManagerDialog.class, "LayerGroupManagerDialog.layersPushUpButton.text")); // NOI18N
        layersPushUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layersPushUpButtonActionPerformed(evt);
            }
        });
        jPanel2.add(layersPushUpButton);

        layersPushDownButton.setText(org.openide.util.NbBundle.getMessage(LayerGroupManagerDialog.class, "LayerGroupManagerDialog.layersPushDownButton.text")); // NOI18N
        layersPushDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layersPushDownButtonActionPerformed(evt);
            }
        });
        jPanel2.add(layersPushDownButton);

        layersAddButton.setText(org.openide.util.NbBundle.getMessage(LayerGroupManagerDialog.class, "LayerGroupManagerDialog.layersAddButton.text")); // NOI18N
        layersAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layersAddButtonActionPerformed(evt);
            }
        });
        jPanel2.add(layersAddButton);

        layersMinusButton.setText(org.openide.util.NbBundle.getMessage(LayerGroupManagerDialog.class, "LayerGroupManagerDialog.layersMinusButton.text")); // NOI18N
        layersMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layersMinusButtonActionPerformed(evt);
            }
        });
        jPanel2.add(layersMinusButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void layersPushUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layersPushUpButtonActionPerformed
        LayersTableModel model = getLayersListModel();
        
        if(model == null) {
            return;
        }
        
        ListSelectionModel selection = layersTable.getSelectionModel();

        int start = selection.getMinSelectionIndex();
        int end = selection.getMaxSelectionIndex();

        if (end < 0 || start == 0) {
            return;
        }

        model.pushUpLayers(start, end);
        
        selection.setSelectionInterval(start - 1, end - 1);
    }//GEN-LAST:event_layersPushUpButtonActionPerformed

    private void layersPushDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layersPushDownButtonActionPerformed
        LayersTableModel model = getLayersListModel();
        
        if(model == null) {
            return;
        }
        
        ListSelectionModel selection = layersTable.getSelectionModel();

        int start = selection.getMinSelectionIndex();
        int end = selection.getMaxSelectionIndex();

        if (end < 0 || end >= model.getRowCount() - 1) {
            return;
        }

        model.pushDownLayers(start, end);
        
        selection.setSelectionInterval(start + 1, end + 1);
    }//GEN-LAST:event_layersPushDownButtonActionPerformed

    private void layersAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layersAddButtonActionPerformed
        LayersTableModel model = getLayersListModel();
        
        if(model == null) {
            return;
        }
        
        ListSelectionModel selection = layersTable.getSelectionModel();

        int end = selection.getMaxSelectionIndex();

        if (end < 0) {
            end = model.getRowCount();
        } else {
            end++;
        }
        
        model.newLayerAt(end);
        
        selection.setSelectionInterval(end, end);
    }//GEN-LAST:event_layersAddButtonActionPerformed

    private void layersMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layersMinusButtonActionPerformed
        LayersTableModel model = getLayersListModel();
        
        if(model == null) {
            return;
        }
        
        ListSelectionModel selection = layersTable.getSelectionModel();

        int start = selection.getMinSelectionIndex();
        int end = selection.getMaxSelectionIndex();

        if (end < 0 || model.getRowCount() < 2) {
            return;
        }

        int len = (end - start) + 1;

        String message = BlueSystem
                .getString("soundLayerEditPanel.delete.message1")
                + " "
                + len
                + " "
                + BlueSystem.getString("soundLayerEditPanel.delete.message2");
        if (JOptionPane.showConfirmDialog(null, message) == JOptionPane.OK_OPTION) {
            model.removeLayers(start, end);
            selection.clearSelection();
        }
    }//GEN-LAST:event_layersMinusButtonActionPerformed

    private LayersTableModel getLayersListModel() {
        if(layersTable.getModel() == emptyList) {
            return null;
        }
        return (LayersTableModel)layersTable.getModel();
    }
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(
                    LayerGroupManagerDialog.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(() -> {
            LayerGroupManagerDialog dialog = new LayerGroupManagerDialog(
                    new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton layersAddButton;
    private javax.swing.JButton layersMinusButton;
    private javax.swing.JButton layersPushDownButton;
    private javax.swing.JButton layersPushUpButton;
    private javax.swing.JTable layersTable;
    // End of variables declaration//GEN-END:variables
}
