/*
 * blue - object composition environment for csound
 * Copyright (c) 2000-2014 Steven Yi (stevenyi@gmail.com)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by  the Free Software Foundation; either version 2 of the License or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation Inc., 59 Temple Place - Suite 330,
 * Boston, MA  02111-1307 USA
 */
package blue.soundObject.editor.jmask;

import javax.swing.DefaultComboBoxModel;

import blue.soundObject.jmask.Accumulator;
import javax.swing.SpinnerNumberModel;

/**
 * 
 * @author steven
 */
public class AccumulatorEditor extends javax.swing.JPanel implements DurationSettable {
    private Accumulator accumulator = null;

    /** Creates new form AccumulatorEditor */
    public AccumulatorEditor(Accumulator accumulator) {
        initComponents();
        
        modeComboBox.setSelectedIndex(accumulator.getMode());

        highTableEditor.setTable(accumulator.getHighTable());
        lowTableEditor.setTable(accumulator.getLowTable());
        
        highSpinner.setModel(
                new SpinnerNumberModel(accumulator.getHigh(), Double.NEGATIVE_INFINITY,
                Double.POSITIVE_INFINITY, 0.1));
        lowSpinner.setModel(
                new SpinnerNumberModel(accumulator.getLow(), Double.NEGATIVE_INFINITY,
                Double.POSITIVE_INFINITY, 0.1));
                
        highTypeComboBox.setSelectedIndex(accumulator.isHighTableEnabled() ? 1 : 0);
        lowTypeComboBox.setSelectedIndex(accumulator.isLowTableEnabled() ? 1 : 0);
        
        this.accumulator = accumulator;
        
        updateDisplay();
    }

    private void updateDisplay() {
        highSpinner.setVisible(!this.accumulator.isHighTableEnabled());
        highTableEditor.setVisible(this.accumulator.isHighTableEnabled());
        lowSpinner.setVisible(!this.accumulator.isLowTableEnabled());
        lowTableEditor.setVisible(this.accumulator.isLowTableEnabled());
    }
    
    public void setDuration(double duration) {
        highTableEditor.setDuration(duration);
        lowTableEditor.setDuration(duration);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        highButtonGroup = new javax.swing.ButtonGroup();
        lowButtonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        modeComboBox = new javax.swing.JComboBox();
        highSpinner = new javax.swing.JSpinner();
        highTableEditor = new blue.soundObject.editor.jmask.TableEditor();
        lowSpinner = new javax.swing.JSpinner();
        lowTableEditor = new blue.soundObject.editor.jmask.TableEditor();
        jLabel2 = new javax.swing.JLabel();
        highTypeComboBox = new javax.swing.JComboBox();
        lowTypeComboBox = new javax.swing.JComboBox();

        jLabel1.setText("Accumulator");

        modeComboBox.setModel(new DefaultComboBoxModel(Accumulator.MODES));
        modeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeComboBoxActionPerformed(evt);
            }
        });

        highSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                highSpinnerStateChanged(evt);
            }
        });

        lowSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lowSpinnerStateChanged(evt);
            }
        });

        jLabel2.setText("Mode");

        highTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "High Value (Constant)", "High Value (Table)" }));
        highTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highTypeComboBoxActionPerformed(evt);
            }
        });

        lowTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Low Value (Constant)", "Low Value (Table)" }));
        lowTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowTypeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(highTableEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 592, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lowTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lowSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lowTableEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 592, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(highTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(highSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {highTypeComboBox, lowTypeComboBox});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(highTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(highSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(highTableEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lowTableEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void highSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_highSpinnerStateChanged
        if (this.accumulator != null) {
            this.accumulator.setHigh(((Double) highSpinner.getValue()).doubleValue());
        }
}//GEN-LAST:event_highSpinnerStateChanged

    private void lowSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lowSpinnerStateChanged
        if (this.accumulator != null) {
            this.accumulator.setLow(((Double) lowSpinner.getValue()).doubleValue());
        }
}//GEN-LAST:event_lowSpinnerStateChanged

    private void modeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeComboBoxActionPerformed
        if (this.accumulator != null) {
            this.accumulator.setMode(modeComboBox.getSelectedIndex());
        }
}//GEN-LAST:event_modeComboBoxActionPerformed
    
private void highTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highTypeComboBoxActionPerformed
    if(this.accumulator != null) {
        this.accumulator.setHighTableEnabled(highTypeComboBox.getSelectedIndex() == 1);
        updateDisplay();
    }
}//GEN-LAST:event_highTypeComboBoxActionPerformed

private void lowTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowTypeComboBoxActionPerformed
    if(this.accumulator != null) {
        this.accumulator.setLowTableEnabled(lowTypeComboBox.getSelectedIndex() == 1);
        updateDisplay();
    }
}//GEN-LAST:event_lowTypeComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup highButtonGroup;
    private javax.swing.JSpinner highSpinner;
    private blue.soundObject.editor.jmask.TableEditor highTableEditor;
    private javax.swing.JComboBox highTypeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.ButtonGroup lowButtonGroup;
    private javax.swing.JSpinner lowSpinner;
    private blue.soundObject.editor.jmask.TableEditor lowTableEditor;
    private javax.swing.JComboBox lowTypeComboBox;
    private javax.swing.JComboBox modeComboBox;
    // End of variables declaration//GEN-END:variables

}
