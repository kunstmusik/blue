/*
 * blue - object composition environment for csound
 * Copyright (c) 2000-2014 Steven Yi (stevenyi@gmail.com)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by  the Free Software Foundation; either version 2 of the License or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation Inc., 59 Temple Place - Suite 330,
 * Boston, MA  02111-1307 USA
 */
package blue.ui.core.midi;

import java.awt.Dimension;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//blue.ui.core.midi//VirtualKeyboard//EN",
autostore = false)
@TopComponent.Description(preferredID = "VirtualKeyboardTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "output", openAtStartup = false, position=800)
@ActionID(category = "Window", id = "blue.ui.core.midi.VirtualKeyboardTopComponent")
@ActionReference(path = "Menu/Window" , position = 705 )
@TopComponent.OpenActionRegistration(displayName = "#CTL_VirtualKeyboardAction",
preferredID = "VirtualKeyboardTopComponent")
public final class VirtualKeyboardTopComponent extends TopComponent {

    public VirtualKeyboardTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(VirtualKeyboardTopComponent.class, "CTL_VirtualKeyboardTopComponent"));
        setToolTipText(NbBundle.getMessage(VirtualKeyboardTopComponent.class, "HINT_VirtualKeyboardTopComponent"));

        channelSpinner.addChangeListener(new ChangeListener() {

            public void stateChanged(ChangeEvent ce) {
                virtualKeyboardPanel1.setChannel(((Integer) channelSpinner.getValue()) - 1);
            }
        });

        octaveSpinner.addChangeListener(new ChangeListener() {

            public void stateChanged(ChangeEvent ce) {
                virtualKeyboardPanel1.setOctave(((Integer) octaveSpinner.getValue()));
            }
        });

        velocitySpinner.addChangeListener(new ChangeListener() {

            public void stateChanged(ChangeEvent ce) {
                virtualKeyboardPanel1.setVelocity(((Integer) velocitySpinner.getValue()));
            }
        });

        virtualKeyboardPanel1.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                final String propertyName = evt.getPropertyName();
                
                if("channel".equals(evt.getPropertyName())) {
                    channelSpinner.setValue((Integer)evt.getNewValue() + 1);
                } else if("octave".equals(propertyName)) {
                    octaveSpinner.setValue(evt.getNewValue());
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        virtualKeyboardPanel1 = new blue.ui.core.midi.VirtualKeyboardPanel();
        jLabel1 = new javax.swing.JLabel();
        channelSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        octaveSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        velocitySpinner = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout virtualKeyboardPanel1Layout = new javax.swing.GroupLayout(virtualKeyboardPanel1);
        virtualKeyboardPanel1.setLayout(virtualKeyboardPanel1Layout);
        virtualKeyboardPanel1Layout.setHorizontalGroup(
            virtualKeyboardPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 971, Short.MAX_VALUE)
        );
        virtualKeyboardPanel1Layout.setVerticalGroup(
            virtualKeyboardPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(VirtualKeyboardTopComponent.class, "VirtualKeyboardTopComponent.jLabel1.text")); // NOI18N

        channelSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 16, 1));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(VirtualKeyboardTopComponent.class, "VirtualKeyboardTopComponent.jLabel2.text")); // NOI18N

        octaveSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 0, 7, 1));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(VirtualKeyboardTopComponent.class, "VirtualKeyboardTopComponent.jLabel3.text")); // NOI18N

        velocitySpinner.setModel(new javax.swing.SpinnerNumberModel(127, 0, 127, 1));

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(VirtualKeyboardTopComponent.class, "VirtualKeyboardTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(channelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(velocitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(octaveSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(427, Short.MAX_VALUE))
            .addComponent(virtualKeyboardPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {channelSpinner, octaveSpinner, velocitySpinner});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(channelSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(velocitySpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(octaveSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(virtualKeyboardPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        virtualKeyboardPanel1.allNotesOff();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner channelSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner octaveSpinner;
    private javax.swing.JSpinner velocitySpinner;
    private blue.ui.core.midi.VirtualKeyboardPanel virtualKeyboardPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        p.setProperty("version", "1.0");
        
        p.setProperty("channel", Integer.toString(virtualKeyboardPanel1.getChannel()));
        p.setProperty("velocity", Integer.toString(virtualKeyboardPanel1.getVelocity()));
        p.setProperty("octave", Integer.toString(virtualKeyboardPanel1.getOctave()));
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        
        virtualKeyboardPanel1.setChannel(Integer.parseInt(p.getProperty("channel", "0")));
        virtualKeyboardPanel1.setVelocity(Integer.parseInt(p.getProperty("velocity", "127")));
        virtualKeyboardPanel1.setOctave(Integer.parseInt(p.getProperty("octave", "5")));
        
        channelSpinner.setValue(virtualKeyboardPanel1.getChannel() + 1);
        velocitySpinner.setValue(virtualKeyboardPanel1.getVelocity());
        octaveSpinner.setValue(virtualKeyboardPanel1.getOctave());
    }
}
