/*
 * blue - object composition environment for csound
 *  Copyright (c) 2000-2014 Steven Yi (stevenyi@gmail.com)
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published
 *  by  the Free Software Foundation; either version 2 of the License or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; see the file COPYING.LIB.  If not, write to
 *  the Free Software Foundation Inc., 59 Temple Place - Suite 330,
 *  Boston, MA  02111-1307 USA
 */
package blue.settings;

import blue.services.render.DiskRenderServiceFactory;
import blue.ui.utilities.FileChooserManager;
import blue.ui.utilities.SimpleDocumentListener;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.openide.awt.HtmlBrowser.URLDisplayer;
import org.openide.modules.InstalledFileLocator;
import org.openide.util.Exceptions;

final class DiskRenderSettingsPanel extends javax.swing.JPanel {

    private final DiskRenderSettingsOptionsPanelController controller;

    private boolean loading = false;

    DiskRenderSettingsPanel(DiskRenderSettingsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();

        DocumentListener changeListener = new SimpleDocumentListener() {

            @Override
            public void documentChanged(DocumentEvent e) {
                if (!loading) {
                    DiskRenderSettingsPanel.this.controller.changed();
                }
            }
        };

        csoundExecText.getDocument().addDocumentListener(changeListener);
        srText.getDocument().addDocumentListener(changeListener);
        ksmpsText.getDocument().addDocumentListener(changeListener);
        nchnlsText.getDocument().addDocumentListener(changeListener);

        externalCommandText.getDocument().addDocumentListener(changeListener);

        advancedText.getDocument().addDocumentListener(changeListener);
        zeroDBFSText.getDocument().addDocumentListener(changeListener);
    }

    private void fireUpdate() {
        if (!loading) {
            controller.changed();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        srText = new javax.swing.JTextField();
        ksmpsText = new javax.swing.JTextField();
        nchnlsText = new javax.swing.JTextField();
        zeroDBFSCheckBox = new javax.swing.JCheckBox();
        zeroDBFSText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        fileFormatCBox = new javax.swing.JCheckBox();
        fileFormatCombo = new javax.swing.JComboBox();
        sampleFormatCBox = new javax.swing.JCheckBox();
        sampleFormatCombo = new javax.swing.JComboBox();
        savePeakCBox = new javax.swing.JCheckBox();
        ditherOutputCBox = new javax.swing.JCheckBox();
        rewriteHeaderCBox = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        advancedText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        noteAmpCBox = new javax.swing.JCheckBox();
        outOfRangeCBox = new javax.swing.JCheckBox();
        warningsCBox = new javax.swing.JCheckBox();
        benchmarkCBox = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        externalCommandText = new javax.swing.JTextField();
        externalCommandBox = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        disableDisplaysCBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        csoundExecText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        renderServiceComboBox = new javax.swing.JComboBox();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jPanel2.border.title_1"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jLabel1.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jLabel2.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jLabel4.text_1")); // NOI18N

        srText.setText(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.srText.text_1")); // NOI18N

        ksmpsText.setText(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.ksmpsText.text_1")); // NOI18N

        nchnlsText.setText(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.nchnlsText.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(zeroDBFSCheckBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.zeroDBFSCheckBox.text")); // NOI18N
        zeroDBFSCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroDBFSCheckBoxActionPerformed(evt);
            }
        });

        zeroDBFSText.setText(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.zeroDBFSText.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(zeroDBFSCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nchnlsText)
                    .addComponent(zeroDBFSText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(srText)
                    .addComponent(ksmpsText, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(srText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ksmpsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nchnlsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zeroDBFSCheckBox)
                    .addComponent(zeroDBFSText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jPanel3.border.title_1"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(fileFormatCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.fileFormatCBox.text_1")); // NOI18N
        fileFormatCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        fileFormatCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        fileFormatCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileFormatCBoxActionPerformed(evt);
            }
        });

        fileFormatCombo.setModel(new DefaultComboBoxModel(DiskRenderSettings.FILE_FORMATS));
        fileFormatCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileFormatComboActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(sampleFormatCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.sampleFormatCBox.text_1")); // NOI18N
        sampleFormatCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        sampleFormatCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        sampleFormatCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleFormatCBoxActionPerformed(evt);
            }
        });

        sampleFormatCombo.setModel(new DefaultComboBoxModel(DiskRenderSettings.SAMPLE_FORMATS));
        sampleFormatCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleFormatComboActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(savePeakCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.savePeakCBox.text_1")); // NOI18N
        savePeakCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        savePeakCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        savePeakCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePeakCBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(ditherOutputCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.ditherOutputCBox.text_1")); // NOI18N
        ditherOutputCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ditherOutputCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        ditherOutputCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ditherOutputCBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(rewriteHeaderCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.rewriteHeaderCBox.text_1")); // NOI18N
        rewriteHeaderCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rewriteHeaderCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rewriteHeaderCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rewriteHeaderCBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileFormatCBox)
                            .addComponent(sampleFormatCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileFormatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sampleFormatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(savePeakCBox)
                    .addComponent(ditherOutputCBox)
                    .addComponent(rewriteHeaderCBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileFormatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileFormatCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sampleFormatCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sampleFormatCBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savePeakCBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ditherOutputCBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rewriteHeaderCBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jPanel4.border.title_1"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jButton2.text_1")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(advancedText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(advancedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jPanel5.border.title_1"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(noteAmpCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.noteAmpCBox.text_1")); // NOI18N
        noteAmpCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        noteAmpCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        noteAmpCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteAmpCBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(outOfRangeCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.outOfRangeCBox.text_1")); // NOI18N
        outOfRangeCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        outOfRangeCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        outOfRangeCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outOfRangeCBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(warningsCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.warningsCBox.text_1")); // NOI18N
        warningsCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        warningsCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        warningsCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warningsCBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(benchmarkCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.benchmarkCBox.text_1")); // NOI18N
        benchmarkCBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        benchmarkCBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        benchmarkCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                benchmarkCBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outOfRangeCBox)
                    .addComponent(noteAmpCBox)
                    .addComponent(warningsCBox)
                    .addComponent(benchmarkCBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(noteAmpCBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outOfRangeCBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningsCBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(benchmarkCBox)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jPanel6.border.title_1"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jLabel5.text_1")); // NOI18N

        externalCommandText.setText(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.externalCommandText.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(externalCommandBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.externalCommandBox.text_1")); // NOI18N
        externalCommandBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        externalCommandBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        externalCommandBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                externalCommandBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(externalCommandText))
                    .addComponent(externalCommandBox))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(externalCommandBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(externalCommandText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jPanel7.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(disableDisplaysCBox, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.disableDisplaysCBox.text")); // NOI18N
        disableDisplaysCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disableDisplaysCBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(disableDisplaysCBox)
                .addContainerGap(361, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(disableDisplaysCBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jLabel3.text_1")); // NOI18N

        csoundExecText.setText(org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.csoundExecText.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jButton1.text_1")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(DiskRenderSettingsPanel.class, "DiskRenderSettingsPanel.jLabel6.text")); // NOI18N

        renderServiceComboBox.setModel(new DefaultComboBoxModel(
            DiskRenderSettings.getAvailableDiskRenderServices()));
    renderServiceComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            renderServiceComboBoxActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(csoundExecText)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton1))
                .addComponent(renderServiceComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jButton1)
                .addComponent(csoundExecText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel6)
                .addComponent(renderServiceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int retVal = FileChooserManager.getDefault().showOpenDialog(
                getClass(), this);

        if (retVal == JFileChooser.APPROVE_OPTION) {
            File f = FileChooserManager.getDefault().getSelectedFile(
                    getClass());

            try {
                String path = f.getCanonicalPath();

                if (f.exists() && f.isFile()) {
                    csoundExecText.setText(path);
                    fireUpdate();
                }
            } catch (IOException ioe) {
                // ignore
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void fileFormatCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileFormatCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_fileFormatCBoxActionPerformed

    private void fileFormatComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileFormatComboActionPerformed
        fireUpdate();
    }//GEN-LAST:event_fileFormatComboActionPerformed

    private void sampleFormatCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleFormatCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_sampleFormatCBoxActionPerformed

    private void sampleFormatComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleFormatComboActionPerformed
        fireUpdate();
    }//GEN-LAST:event_sampleFormatComboActionPerformed

    private void savePeakCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePeakCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_savePeakCBoxActionPerformed

    private void ditherOutputCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ditherOutputCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_ditherOutputCBoxActionPerformed

    private void rewriteHeaderCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rewriteHeaderCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_rewriteHeaderCBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        File manualDir = InstalledFileLocator.getDefault().
                locate("csoundManual", "csound-manual", false);
        
        File index = new File(manualDir, "CommandFlags.html");
        
        try {
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().browse(index.toURI());
            } else {
                URLDisplayer.getDefault().showURL(index.toURL());
            }
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void noteAmpCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteAmpCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_noteAmpCBoxActionPerformed

    private void outOfRangeCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outOfRangeCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_outOfRangeCBoxActionPerformed

    private void warningsCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warningsCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_warningsCBoxActionPerformed

    private void benchmarkCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_benchmarkCBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_benchmarkCBoxActionPerformed

    private void externalCommandBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_externalCommandBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_externalCommandBoxActionPerformed

    private void disableDisplaysCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disableDisplaysCBoxActionPerformed
        fireUpdate();     }//GEN-LAST:event_disableDisplaysCBoxActionPerformed

    private void zeroDBFSCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroDBFSCheckBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_zeroDBFSCheckBoxActionPerformed

    private void renderServiceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renderServiceComboBoxActionPerformed
        fireUpdate();
    }//GEN-LAST:event_renderServiceComboBoxActionPerformed

    void load() {
        loading = true;

        DiskRenderSettings settings = DiskRenderSettings.getInstance();

        csoundExecText.setText(settings.csoundExecutable);
        srText.setText(settings.defaultSr);
        ksmpsText.setText(settings.defaultKsmps);
        nchnlsText.setText(settings.defaultNchnls);

        externalCommandBox.setSelected(settings.externalPlayCommandEnabled);
        externalCommandText.setText(settings.externalPlayCommand);

        fileFormatCBox.setSelected(settings.fileFormatEnabled);
        fileFormatCombo.setSelectedItem(settings.fileFormat);
        sampleFormatCBox.setSelected(settings.sampleFormatEnabled);
        sampleFormatCombo.setSelectedItem(settings.sampleFormat);
        savePeakCBox.setSelected(settings.savePeakInformation);
        ditherOutputCBox.setSelected(settings.ditherOutput);
        rewriteHeaderCBox.setSelected(settings.rewriteHeader);

        noteAmpCBox.setSelected(settings.noteAmpsEnabled);
        outOfRangeCBox.setSelected(settings.outOfRangeEnabled);
        warningsCBox.setSelected(settings.warningsEnabled);
        benchmarkCBox.setSelected(settings.benchmarkEnabled);

        disableDisplaysCBox.setSelected(settings.displaysDisabled);
        
        advancedText.setText(settings.advancedSettings);
        
        zeroDBFSCheckBox.setSelected(settings.useZeroDbFS);
        zeroDBFSText.setText(settings.zeroDbFS);

        renderServiceComboBox.setSelectedItem(settings.renderServiceFactory);

        loading = false;
    }

    void store() {
        DiskRenderSettings settings = DiskRenderSettings.getInstance();

        settings.csoundExecutable = csoundExecText.getText();
        settings.defaultSr = srText.getText();
        settings.defaultKsmps = ksmpsText.getText();
        settings.defaultNchnls = nchnlsText.getText();

        settings.externalPlayCommandEnabled = externalCommandBox.isSelected();
        settings.externalPlayCommand = externalCommandText.getText();

        settings.fileFormatEnabled = fileFormatCBox.isSelected();
        settings.fileFormat = fileFormatCombo.getSelectedItem().toString();

        settings.sampleFormatEnabled = sampleFormatCBox.isSelected();
        settings.sampleFormat = sampleFormatCombo.getSelectedItem().toString();
        settings.savePeakInformation = savePeakCBox.isSelected();
        settings.ditherOutput = ditherOutputCBox.isSelected();
        settings.rewriteHeader = rewriteHeaderCBox.isSelected();

        settings.noteAmpsEnabled = noteAmpCBox.isSelected();
        settings.warningsEnabled = warningsCBox.isSelected();
        settings.outOfRangeEnabled = outOfRangeCBox.isSelected();
        settings.benchmarkEnabled = benchmarkCBox.isSelected();

        settings.displaysDisabled = disableDisplaysCBox.isSelected();
        
        settings.advancedSettings = advancedText.getText();
        
        settings.useZeroDbFS = zeroDBFSCheckBox.isSelected();
        settings.zeroDbFS = zeroDBFSText.getText();

        settings.renderServiceFactory = (DiskRenderServiceFactory) renderServiceComboBox.getSelectedItem();
       

        settings.save();
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField advancedText;
    private javax.swing.JCheckBox benchmarkCBox;
    private javax.swing.JTextField csoundExecText;
    private javax.swing.JCheckBox disableDisplaysCBox;
    private javax.swing.JCheckBox ditherOutputCBox;
    private javax.swing.JCheckBox externalCommandBox;
    private javax.swing.JTextField externalCommandText;
    private javax.swing.JCheckBox fileFormatCBox;
    private javax.swing.JComboBox fileFormatCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField ksmpsText;
    private javax.swing.JTextField nchnlsText;
    private javax.swing.JCheckBox noteAmpCBox;
    private javax.swing.JCheckBox outOfRangeCBox;
    private javax.swing.JComboBox renderServiceComboBox;
    private javax.swing.JCheckBox rewriteHeaderCBox;
    private javax.swing.JCheckBox sampleFormatCBox;
    private javax.swing.JComboBox sampleFormatCombo;
    private javax.swing.JCheckBox savePeakCBox;
    private javax.swing.JTextField srText;
    private javax.swing.JCheckBox warningsCBox;
    private javax.swing.JCheckBox zeroDBFSCheckBox;
    private javax.swing.JTextField zeroDBFSText;
    // End of variables declaration//GEN-END:variables
}
